# bot.py ‚Äî –æ–±–Ω–æ–≤–ª—ë–Ω–Ω—ã–π –∫–æ–¥ —Å —É—á—ë—Ç–æ–º –Ω–æ–≤–æ–π —Å—Ç—Ä—É–∫—Ç—É—Ä—ã
from aiogram import Bot, Dispatcher, types, executor
import logging, os

API_TOKEN = os.getenv('API_TOKEN')
logging.basicConfig(level=logging.INFO)
bot = Bot(token=API_TOKEN)
dp = Dispatcher(bot)

@dp.message_handler(commands=['start'])
async def start(message: types.Message):
    text = (
        '–ü—Ä–∏–≤–µ—Ç! –≠—Ç–æ —Ç–≤–æ–π –≤—Ö–æ–¥ –≤ –∫—É—Ä—Å –ø–æ ChatGPT.\n\n'
        'üöÄ –ù–∞—á–Ω–∏ —Å –±–µ—Å–ø–ª–∞—Ç–Ω–æ–≥–æ —É—Ä–æ–∫–∞\n'
        'üìò /lesson ‚Äî –ë–µ—Å–ø–ª–∞—Ç–Ω—ã–π —É—Ä–æ–∫\n'
        'üí≥ /buy ‚Äî –û–ø–ª–∞—Ç–∏—Ç—å –∫—É—Ä—Å\n'
        'üß† /info ‚Äî –û –∫—É—Ä—Å–µ\n'
        'üìé /download ‚Äî –°–∫–∞—á–∞—Ç—å –º–∞—Ç–µ—Ä–∏–∞–ª—ã'
    )
    await message.answer(text)

@dp.message_handler(commands=['lesson'])
async def lesson(message: types.Message):
    await message.answer("–£—Ä–æ–∫ 1: –ö–∞–∫ —Ä–∞–±–æ—Ç–∞–µ—Ç ChatGPT.\n... [–ø–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–∏] ...")

@dp.message_handler(commands=['buy'])
async def buy(message: types.Message):
    await message.answer("–û–ø–ª–∞—Ç–∞: 3990 ‚ÇΩ –∑–∞ –±–∞–∑—É, 7990 ‚ÇΩ –∑–∞ PRO. –°—Å—ã–ª–∫–∞: https://pay.example.com")

@dp.message_handler(commands=['info'])
async def info(message: types.Message):
    await message.answer("–í —ç—Ç–æ–º –∫—É—Ä—Å–µ —Ç—ã –Ω–∞—É—á–∏—à—å—Å—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å ChatGPT –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–æ: –æ—Ç –ø—Ä–æ–º—Ç–æ–≤ –¥–æ —Å–æ–∑–¥–∞–Ω–∏—è –∞–≥–µ–Ω—Ç–æ–≤")

@dp.message_handler(commands=['download'])
async def download(message: types.Message):
    await message.answer("üì• –°–∫–∞—á–∞—Ç—å –º–∞—Ç–µ—Ä–∏–∞–ª—ã: https://yourlink.com/materials.zip")

if __name__ == '__main__':
    executor.start_polling(dp, skip_updates=True)
